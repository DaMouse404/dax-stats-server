{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "LoadBalancerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "SecurityGroupIngress": [
          {
            "ToPort": "443",
            "IpProtocol": "tcp",
            "CidrIp": "0.0.0.0/0",
            "FromPort": "443"
          }
        ],
        "VpcId": {
          "Ref": "VpcId"
        },
        "GroupDescription": "An ELB group allowing access only to from the corresponding component"
      }
    },
    "ComponentAutoScalingGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "PauseTime": {
            "Ref": "UpdatePauseTime"
          },
          "MaxBatchSize": {
            "Ref": "UpdateMaxBatchSize"
          },
          "MinInstancesInService": {
            "Ref": "UpdateMinInService"
          }
        }
      },
      "Properties": {
        "Tags": [
          {
            "PropagateAtLaunch": true,
            "Value": "iplayer",
            "Key": "BBCProject"
          },
          {
            "PropagateAtLaunch": true,
            "Value": {
              "Ref": "Environment"
            },
            "Key": "BBCEnvironment"
          },
          {
            "PropagateAtLaunch": true,
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Environment"
                  },
                  "iplayer-dax-stats"
                ]
              ]
            },
            "Key": "Name"
          },
          {
            "PropagateAtLaunch": true,
            "Value": "iplayer-dax-stats",
            "Key": "BBCComponent"
          }
        ],
        "LaunchConfigurationName": {
          "Ref": "ComponentLaunchConfiguration"
        },
        "MinSize": {
          "Ref": "MinSize"
        },
        "MaxSize": {
          "Ref": "MaxSize"
        },
        "VPCZoneIdentifier": [
          {
            "Ref": "PrivateSubnet1Id"
          },
          {
            "Ref": "PrivateSubnet2Id"
          },
          {
            "Ref": "PrivateSubnet3Id"
          }
        ],
        "LoadBalancerNames": [
          {
            "Ref": "ComponentElasticLoadBalancer"
          }
        ],
        "AvailabilityZones": [
          "eu-west-1a",
          "eu-west-1b",
          "eu-west-1c"
        ]
      }
    },
    "ComponentElasticLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "Subnets": [
          {
            "Ref": "PublicSubnet1Id"
          },
          {
            "Ref": "PublicSubnet2Id"
          },
          {
            "Ref": "PublicSubnet3Id"
          }
        ],
        "Listeners": [
          {
            "InstancePort": "7443",
            "LoadBalancerPort": "443",
            "Protocol": "tcp",
            "InstanceProtocol": "tcp"
          }
        ],
        "SecurityGroups": [
          {
            "Ref": "LoadBalancerSecurityGroup"
          }
        ],
        "HealthCheck": {
          "HealthyThreshold": "3",
          "Interval": "15",
          "Target": "HTTP:7081/status",
          "Timeout": "10",
          "UnhealthyThreshold": "3"
        }
      }
    },
    "ComponentLaunchConfiguration": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "KeyName": {
          "Ref": "KeyName"
        },
        "SecurityGroups": [
          {
            "Ref": "BastionAccessSecurityGroup"
          },
          {
            "Ref": "ComponentSecurityGroup"
          }
        ],
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "IamInstanceProfile": {
          "Ref": "ComponentInstanceProfile"
        },
        "ImageId": {
          "Ref": "ImageId"
        }
      }
    },
    "ComponentInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "ComponentRole"
          }
        ]
      }
    },
    "ComponentScalingPolicy": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "ScalingAdjustment": 1,
        "AutoScalingGroupName": {
          "Ref": "ComponentAutoScalingGroup"
        },
        "AdjustmentType": "ChangeInCapacity"
      }
    },
    "ComponentDNS": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "HostedZoneName": {
          "Ref": "DomainNameBase"
        },
        "TTL": "60",
        "Type": "CNAME",
        "ResourceRecords": [
          {
            "Fn::GetAtt": [
              "ComponentElasticLoadBalancer",
              "DNSName"
            ]
          }
        ],
        "Name": {
          "Fn::Join": [
            ".",
            [
              {
                "Ref": "CnameEntry"
              },
              {
                "Ref": "DomainNameBase"
              }
            ]
          ]
        }
      }
    },
    "ComponentPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "ComponentPolicy",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Resource": [
                "*"
              ],
              "Effect": "Allow"
            },
            {
              "Action": [
                "cloudwatch:*"
              ],
              "Resource": [
                "*"
              ],
              "Effect": "Allow"
            },
            {
              "Action": [
                "s3:GetBucketLocation",
                "s3:GetBucketNotification",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:ListMultipartUploadParts"
              ],
              "Resource": [
                {
                  "Ref": "S3BucketArn"
                }
              ],
              "Effect": "Allow"
            },
            {
              "Action": [
                "s3:GetObject",
                "s3:GetBucketLocation",
                "s3:AbortMultipartUpload",
                "s3:PutBucketNotification",
                "s3:PutObject",
                "s3:DeleteObject"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "S3BucketArn"
                      },
                      "/iplayer-dax-stats/",
                      {
                        "Ref": "Environment"
                      },
                      "/logs/*"
                    ]
                  ]
                }
              ],
              "Effect": "Allow"
            },
            {
              "Action": [
                "cloudformation:Describe*"
              ],
              "Resource": [
                "*"
              ],
              "Effect": "Allow"
            },
            {
              "Action": [
                "ec2:Describe*"
              ],
              "Resource": [
                "*"
              ],
              "Effect": "Allow"
            }
          ]
        },
        "Roles": [
          {
            "Ref": "ComponentRole"
          }
        ]
      }
    },
    "ComponentSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "SecurityGroupIngress": [
          {
            "ToPort": "7081",
            "IpProtocol": "tcp",
            "SourceSecurityGroupId": {
              "Ref": "LoadBalancerSecurityGroup"
            },
            "FromPort": "7081"
          },
          {
            "ToPort": "7443",
            "IpProtocol": "tcp",
            "SourceSecurityGroupId": {
              "Ref": "LoadBalancerSecurityGroup"
            },
            "FromPort": "7443"
          },
          {
            "ToPort": "123",
            "IpProtocol": "udp",
            "SourceSecurityGroupId": {
              "Ref": "LoadBalancerSecurityGroup"
            },
            "FromPort": "123"
          }
        ],
        "VpcId": {
          "Ref": "VpcId"
        },
        "GroupDescription": "A component security group allowing access only from the corresponding ELB"
      }
    },
    "ComponentRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": "/",
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              }
            }
          ]
        }
      }
    }
  },
  "Description": "A BBC Component template. Includes autoscaled instances",
  "Parameters": {
    "DomainNameBase": {
      "Default": "cloud.bbc.co.uk.",
      "Type": "String",
      "Description": "Base domain name (ending with a '.') under which new DNS entries are added"
    },
    "MinSize": {
      "Default": "2",
      "Type": "String",
      "Description": "The minimum number of instances"
    },
    "VpcId": {
      "Type": "String",
      "Description": "The Id of the VPC to attach the environment to"
    },
    "CnameEntry": {
      "Type": "String",
      "Description": "The cname entry for the component"
    },
    "UpdatePauseTime": {
      "Default": "PT0S",
      "Type": "String",
      "Description": "The time to wait between new instances coming online and the next batch being killed during an ASG update."
    },
    "PrivateSubnet3Id": {
      "Type": "String",
      "Description": "The id of private subnet 3"
    },
    "UpdateMinInService": {
      "Default": "0",
      "Type": "String",
      "Description": "The minimum number of instances in service during an ASG update."
    },
    "ImageId": {
      "Type": "String",
      "Description": "The AMI to use for this component"
    },
    "Environment": {
      "Type": "String",
      "Description": "The name of the environment. Test or Live"
    },
    "MaxSize": {
      "Default": "2",
      "Type": "String",
      "Description": "The maximum number of instances"
    },
    "KeyName": {
      "Type": "String",
      "Description": "Name of existing EC2 keypair to enable SSH access to the created instances"
    },
    "PrivateSubnet1Id": {
      "Type": "String",
      "Description": "The id of private subnet 1"
    },
    "BastionAccessSecurityGroup": {
      "Type": "String",
      "Description": "The security group that allows access from the bastions"
    },
    "PublicSubnet1Id": {
      "Type": "String",
      "Description": "The id of public subnet 1"
    },
    "PublicSubnet2Id": {
      "Type": "String",
      "Description": "The id of public subnet 2"
    },
    "PrivateSubnet2Id": {
      "Type": "String",
      "Description": "The id of private subnet 2"
    },
    "UpdateMaxBatchSize": {
      "Default": "1",
      "Type": "String",
      "Description": "The maximum number of instances to be killed at one time during an ASG update."
    },
    "InstanceType": {
      "Default": "m1.small",
      "Type": "String",
      "Description": "The size of the instances"
    },
    "S3BucketArn": {
      "Type": "String",
      "Description": "The location of the default private storage bucket for all applications."
    },
    "PublicSubnet3Id": {
      "Type": "String",
      "Description": "The id of public subnet 3"
    }
  }
}